---
name: unit-test

on:
    push:
        paths:
            - 'src/**'
            - 'cmake/**'
            - 'tests/**'
            - 'conanfile.py'
            - 'CMakeLists.txt'
            - '.github/workflows/unit-test.yml'
        branches:
            - main
            - 'CURA-*'
            - 'CT_fix'
        tags:
            - '[5-9].[0-9].+*'
    pull_request:
        paths:
            - 'src/**'
            - 'cmake/**'
            - 'tests/**'
            - 'conanfile.py'
            - 'CMakeLists.txt'
            - '.github/workflows/unit-test.yml'
        branches:
            - main
            - '[5-9].[0-9]'

env:
    CONAN_USER: ${{ secrets.CONAN_USER }}
    CONAN_PASS: ${{ secrets.CONAN_PASS }}

jobs:
    testing:
        runs-on: ubuntu-20.04

        steps:
            -   name: Checkout CuraEngine
                uses: actions/checkout@v3

            -   name: Setup Python and pip
                uses: actions/setup-python@v3
                with:
                    python-version: '3.10.4'
                    architecture: 'x64'
                    cache: 'pip'

            -   name: Prepare Conan and sip-build (Bash)
                if: ${{ runner.os != 'Windows' }}
                run: |
                    pip install --require-hashes -r requirements.txt
                    # FIXME: Once we fully support Conan change to: `conan config install https://github.com/Ultimaker/conan-config.git`
                    conan config install https://github.com/Ultimaker/conan-config.git -a "-b CURA-9177_Fix_CI_CD" -tf $HOME/.conan
                    conan profile new default --detect
                    conan user -p $CONAN_PASS -r ultimaker $CONAN_USER

            -   name: Cache Conan local repository packages (Bash)
                uses: actions/cache@v3
                with:
                    path: |
                        $HOME/.conan/data
                    key: ${{ runner.os }}-testing

            -   name: Install dependencies
                run: conan install . -o enable_testing=True -pr:b cura_build.jinja -pr:h cura_release.jinja --build=missing --update -g VirtualBuildEnv

            -   name: Upload the Dependency package(s)
                run: conan upload "*" -r ultimaker --all -c

            -   name: Run Unit Test CuraEngine
                id: run-test
                run: |
                    cmake --toolchain cmake-build-release/conan/conan_toolchain.cmake -S . -B cmake-build-release/
                    cmake --build cmake-build-release/
                    cd cmake-build-release/
                    ctest --output-junit engine_test.xml

            -   name: Publish Unit Test Results
                id: test-results
                uses: EnricoMi/publish-unit-test-result-action@v1
                if: ${{ always() }}
                with:
                    files: |
                        **/*.xml

            -   name: Conclusion
                run: echo "Conclusion is ${{ fromJSON( steps.test-results.outputs.json ).conclusion }}"